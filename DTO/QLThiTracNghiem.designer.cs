#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_OnThiTracNghiem1")]
	public partial class QLThiTracNghiemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietBaiThi(ChiTietBaiThi instance);
    partial void UpdateChiTietBaiThi(ChiTietBaiThi instance);
    partial void DeleteChiTietBaiThi(ChiTietBaiThi instance);
    partial void InsertChuong(Chuong instance);
    partial void UpdateChuong(Chuong instance);
    partial void DeleteChuong(Chuong instance);
    partial void InsertChiTietDeThi(ChiTietDeThi instance);
    partial void UpdateChiTietDeThi(ChiTietDeThi instance);
    partial void DeleteChiTietDeThi(ChiTietDeThi instance);
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertKetQuaBaiThi(KetQuaBaiThi instance);
    partial void UpdateKetQuaBaiThi(KetQuaBaiThi instance);
    partial void DeleteKetQuaBaiThi(KetQuaBaiThi instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertPhieuTaoDe(PhieuTaoDe instance);
    partial void UpdatePhieuTaoDe(PhieuTaoDe instance);
    partial void DeletePhieuTaoDe(PhieuTaoDe instance);
    #endregion
		
		public QLThiTracNghiemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLThiTracNghiemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLThiTracNghiemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		public QLThiTracNghiemDataContext() :
		base(global::DTO.Properties.Settings.Default.LTWNCConn,
			mappingSource)
		{
			OnCreated();
		}
		public QLThiTracNghiemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietBaiThi> ChiTietBaiThis
		{
			get
			{
				return this.GetTable<ChiTietBaiThi>();
			}
		}
		
		public System.Data.Linq.Table<Chuong> Chuongs
		{
			get
			{
				return this.GetTable<Chuong>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this.GetTable<ChiTietDeThi>();
			}
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<KetQuaBaiThi> KetQuaBaiThis
		{
			get
			{
				return this.GetTable<KetQuaBaiThi>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<PhieuTaoDe> PhieuTaoDes
		{
			get
			{
				return this.GetTable<PhieuTaoDe>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietBaiThi")]
	public partial class ChiTietBaiThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBaiThi;
		
		private string _MaKQ;
		
		private string _CauTraLoi;
		
		private string _TrangThai;
		
		private System.Nullable<int> _CauHoi;
		
		private EntityRef<KetQuaBaiThi> _KetQuaBaiThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaiThiChanging(int value);
    partial void OnMaBaiThiChanged();
    partial void OnMaKQChanging(string value);
    partial void OnMaKQChanged();
    partial void OnCauTraLoiChanging(string value);
    partial void OnCauTraLoiChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnCauHoiChanging(System.Nullable<int> value);
    partial void OnCauHoiChanged();
    #endregion
		
		public ChiTietBaiThi()
		{
			this._KetQuaBaiThi = default(EntityRef<KetQuaBaiThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaiThi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBaiThi
		{
			get
			{
				return this._MaBaiThi;
			}
			set
			{
				if ((this._MaBaiThi != value))
				{
					this.OnMaBaiThiChanging(value);
					this.SendPropertyChanging();
					this._MaBaiThi = value;
					this.SendPropertyChanged("MaBaiThi");
					this.OnMaBaiThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKQ", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaKQ
		{
			get
			{
				return this._MaKQ;
			}
			set
			{
				if ((this._MaKQ != value))
				{
					if (this._KetQuaBaiThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKQChanging(value);
					this.SendPropertyChanging();
					this._MaKQ = value;
					this.SendPropertyChanged("MaKQ");
					this.OnMaKQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauTraLoi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CauTraLoi
		{
			get
			{
				return this._CauTraLoi;
			}
			set
			{
				if ((this._CauTraLoi != value))
				{
					this.OnCauTraLoiChanging(value);
					this.SendPropertyChanging();
					this._CauTraLoi = value;
					this.SendPropertyChanged("CauTraLoi");
					this.OnCauTraLoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NChar(10)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoi", DbType="Int")]
		public System.Nullable<int> CauHoi
		{
			get
			{
				return this._CauHoi;
			}
			set
			{
				if ((this._CauHoi != value))
				{
					this.OnCauHoiChanging(value);
					this.SendPropertyChanging();
					this._CauHoi = value;
					this.SendPropertyChanged("CauHoi");
					this.OnCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KetQuaBaiThi_ChiTietBaiThi", Storage="_KetQuaBaiThi", ThisKey="MaKQ", OtherKey="MaKQ", IsForeignKey=true)]
		public KetQuaBaiThi KetQuaBaiThi
		{
			get
			{
				return this._KetQuaBaiThi.Entity;
			}
			set
			{
				KetQuaBaiThi previousValue = this._KetQuaBaiThi.Entity;
				if (((previousValue != value) 
							|| (this._KetQuaBaiThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KetQuaBaiThi.Entity = null;
						previousValue.ChiTietBaiThis.Remove(this);
					}
					this._KetQuaBaiThi.Entity = value;
					if ((value != null))
					{
						value.ChiTietBaiThis.Add(this);
						this._MaKQ = value.MaKQ;
					}
					else
					{
						this._MaKQ = default(string);
					}
					this.SendPropertyChanged("KetQuaBaiThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chuong")]
	public partial class Chuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChuong;
		
		private string _TenChuong;
		
		private string _MaMonHoc;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChuongChanging(int value);
    partial void OnMaChuongChanged();
    partial void OnTenChuongChanging(string value);
    partial void OnTenChuongChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    #endregion
		
		public Chuong()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChuong
		{
			get
			{
				return this._MaChuong;
			}
			set
			{
				if ((this._MaChuong != value))
				{
					this.OnMaChuongChanging(value);
					this.SendPropertyChanging();
					this._MaChuong = value;
					this.SendPropertyChanged("MaChuong");
					this.OnMaChuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuong", DbType="NVarChar(150)")]
		public string TenChuong
		{
			get
			{
				return this._TenChuong;
			}
			set
			{
				if ((this._TenChuong != value))
				{
					this.OnTenChuongChanging(value);
					this.SendPropertyChanging();
					this._TenChuong = value;
					this.SendPropertyChanged("TenChuong");
					this.OnTenChuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="NChar(10)")]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chuong_CauHoi", Storage="_CauHois", ThisKey="MaChuong", OtherKey="MaChuong")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_Chuong", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.Chuongs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.Chuongs.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.Chuong = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.Chuong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDeThi")]
	public partial class ChiTietDeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietDeThi;
		
		private System.Nullable<int> _MaCauHoi;
		
		private string _MaDe;
		
		private EntityRef<CauHoi> _CauHoi;
		
		private EntityRef<DeThi> _DeThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietDeThiChanging(int value);
    partial void OnMaChiTietDeThiChanged();
    partial void OnMaCauHoiChanging(System.Nullable<int> value);
    partial void OnMaCauHoiChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    #endregion
		
		public ChiTietDeThi()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			this._DeThi = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietDeThi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietDeThi
		{
			get
			{
				return this._MaChiTietDeThi;
			}
			set
			{
				if ((this._MaChiTietDeThi != value))
				{
					this.OnMaChiTietDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietDeThi = value;
					this.SendPropertyChanged("MaChiTietDeThi");
					this.OnMaChiTietDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="Int")]
		public System.Nullable<int> MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="NChar(10)")]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_ChiTietDeThi", Storage="_CauHoi", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.ChiTietDeThis.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDeThis.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietDeThi", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.ChiTietDeThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDeThis.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCauHoi;
		
		private string _CauHoi1;
		
		private string _DapAnA;
		
		private string _DapAnB;
		
		private string _DapAnC;
		
		private string _DapAnD;
		
		private string _DapAnDung;
		
		private string _MucDo;
		
		private string _MaMonHoc;
		
		private System.Nullable<int> _MaChuong;
		
		private string _MaGiaoVien;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<ChiTietDeThi> _ChiTietDeThis;
		
		private EntityRef<Chuong> _Chuong;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(int value);
    partial void OnMaCauHoiChanged();
    partial void OnCauHoi1Changing(string value);
    partial void OnCauHoi1Changed();
    partial void OnDapAnAChanging(string value);
    partial void OnDapAnAChanged();
    partial void OnDapAnBChanging(string value);
    partial void OnDapAnBChanged();
    partial void OnDapAnCChanging(string value);
    partial void OnDapAnCChanged();
    partial void OnDapAnDChanging(string value);
    partial void OnDapAnDChanged();
    partial void OnDapAnDungChanging(string value);
    partial void OnDapAnDungChanged();
    partial void OnMucDoChanging(string value);
    partial void OnMucDoChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnMaChuongChanging(System.Nullable<int> value);
    partial void OnMaChuongChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public CauHoi()
		{
			this._ChiTietDeThis = new EntitySet<ChiTietDeThi>(new Action<ChiTietDeThi>(this.attach_ChiTietDeThis), new Action<ChiTietDeThi>(this.detach_ChiTietDeThis));
			this._Chuong = default(EntityRef<Chuong>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CauHoi", Storage="_CauHoi1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CauHoi1
		{
			get
			{
				return this._CauHoi1;
			}
			set
			{
				if ((this._CauHoi1 != value))
				{
					this.OnCauHoi1Changing(value);
					this.SendPropertyChanging();
					this._CauHoi1 = value;
					this.SendPropertyChanged("CauHoi1");
					this.OnCauHoi1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnA", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DapAnA
		{
			get
			{
				return this._DapAnA;
			}
			set
			{
				if ((this._DapAnA != value))
				{
					this.OnDapAnAChanging(value);
					this.SendPropertyChanging();
					this._DapAnA = value;
					this.SendPropertyChanged("DapAnA");
					this.OnDapAnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnB", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DapAnB
		{
			get
			{
				return this._DapAnB;
			}
			set
			{
				if ((this._DapAnB != value))
				{
					this.OnDapAnBChanging(value);
					this.SendPropertyChanging();
					this._DapAnB = value;
					this.SendPropertyChanged("DapAnB");
					this.OnDapAnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnC", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DapAnC
		{
			get
			{
				return this._DapAnC;
			}
			set
			{
				if ((this._DapAnC != value))
				{
					this.OnDapAnCChanging(value);
					this.SendPropertyChanging();
					this._DapAnC = value;
					this.SendPropertyChanged("DapAnC");
					this.OnDapAnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnD", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DapAnD
		{
			get
			{
				return this._DapAnD;
			}
			set
			{
				if ((this._DapAnD != value))
				{
					this.OnDapAnDChanging(value);
					this.SendPropertyChanging();
					this._DapAnD = value;
					this.SendPropertyChanged("DapAnD");
					this.OnDapAnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DapAnDung
		{
			get
			{
				return this._DapAnDung;
			}
			set
			{
				if ((this._DapAnDung != value))
				{
					this.OnDapAnDungChanging(value);
					this.SendPropertyChanging();
					this._DapAnDung = value;
					this.SendPropertyChanged("DapAnDung");
					this.OnDapAnDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucDo", DbType="NChar(10)")]
		public string MucDo
		{
			get
			{
				return this._MucDo;
			}
			set
			{
				if ((this._MucDo != value))
				{
					this.OnMucDoChanging(value);
					this.SendPropertyChanging();
					this._MucDo = value;
					this.SendPropertyChanged("MucDo");
					this.OnMucDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="NChar(10)")]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuong", DbType="Int")]
		public System.Nullable<int> MaChuong
		{
			get
			{
				return this._MaChuong;
			}
			set
			{
				if ((this._MaChuong != value))
				{
					if (this._Chuong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChuongChanging(value);
					this.SendPropertyChanging();
					this._MaChuong = value;
					this.SendPropertyChanged("MaChuong");
					this.OnMaChuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NChar(10)")]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_ChiTietDeThi", Storage="_ChiTietDeThis", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this._ChiTietDeThis;
			}
			set
			{
				this._ChiTietDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chuong_CauHoi", Storage="_Chuong", ThisKey="MaChuong", OtherKey="MaChuong", IsForeignKey=true)]
		public Chuong Chuong
		{
			get
			{
				return this._Chuong.Entity;
			}
			set
			{
				Chuong previousValue = this._Chuong.Entity;
				if (((previousValue != value) 
							|| (this._Chuong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chuong.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._Chuong.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._MaChuong = value.MaChuong;
					}
					else
					{
						this._MaChuong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Chuong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_CauHoi", Storage="_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoi", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDe;
		
		private string _MaPhieuTaoDe;
		
		private string _MucDo;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<ChiTietDeThi> _ChiTietDeThis;
		
		private EntitySet<KetQuaBaiThi> _KetQuaBaiThis;
		
		private EntityRef<PhieuTaoDe> _PhieuTaoDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnMaPhieuTaoDeChanging(string value);
    partial void OnMaPhieuTaoDeChanged();
    partial void OnMucDoChanging(string value);
    partial void OnMucDoChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public DeThi()
		{
			this._ChiTietDeThis = new EntitySet<ChiTietDeThi>(new Action<ChiTietDeThi>(this.attach_ChiTietDeThis), new Action<ChiTietDeThi>(this.detach_ChiTietDeThis));
			this._KetQuaBaiThis = new EntitySet<KetQuaBaiThi>(new Action<KetQuaBaiThi>(this.attach_KetQuaBaiThis), new Action<KetQuaBaiThi>(this.detach_KetQuaBaiThis));
			this._PhieuTaoDe = default(EntityRef<PhieuTaoDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuTaoDe", DbType="NChar(10)")]
		public string MaPhieuTaoDe
		{
			get
			{
				return this._MaPhieuTaoDe;
			}
			set
			{
				if ((this._MaPhieuTaoDe != value))
				{
					if (this._PhieuTaoDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuTaoDeChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuTaoDe = value;
					this.SendPropertyChanged("MaPhieuTaoDe");
					this.OnMaPhieuTaoDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucDo", DbType="NChar(10)")]
		public string MucDo
		{
			get
			{
				return this._MucDo;
			}
			set
			{
				if ((this._MucDo != value))
				{
					this.OnMucDoChanging(value);
					this.SendPropertyChanging();
					this._MucDo = value;
					this.SendPropertyChanged("MucDo");
					this.OnMucDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietDeThi", Storage="_ChiTietDeThis", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this._ChiTietDeThis;
			}
			set
			{
				this._ChiTietDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_KetQuaBaiThi", Storage="_KetQuaBaiThis", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<KetQuaBaiThi> KetQuaBaiThis
		{
			get
			{
				return this._KetQuaBaiThis;
			}
			set
			{
				this._KetQuaBaiThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuTaoDe_DeThi", Storage="_PhieuTaoDe", ThisKey="MaPhieuTaoDe", OtherKey="MaPhieuTaoDe", IsForeignKey=true)]
		public PhieuTaoDe PhieuTaoDe
		{
			get
			{
				return this._PhieuTaoDe.Entity;
			}
			set
			{
				PhieuTaoDe previousValue = this._PhieuTaoDe.Entity;
				if (((previousValue != value) 
							|| (this._PhieuTaoDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuTaoDe.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._PhieuTaoDe.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._MaPhieuTaoDe = value.MaPhieuTaoDe;
					}
					else
					{
						this._MaPhieuTaoDe = default(string);
					}
					this.SendPropertyChanged("PhieuTaoDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_KetQuaBaiThis(KetQuaBaiThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_KetQuaBaiThis(KetQuaBaiThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaoVien;
		
		private string _HoTen;
		
		private string _MatKhau;
		
		private string _ChucVu;
		
		private string _MaMonHoc;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntitySet<PhieuTaoDe> _PhieuTaoDes;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    #endregion
		
		public GiaoVien()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._PhieuTaoDes = new EntitySet<PhieuTaoDe>(new Action<PhieuTaoDe>(this.attach_PhieuTaoDes), new Action<PhieuTaoDe>(this.detach_PhieuTaoDes));
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(150)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NChar(10)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="NChar(10)")]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_CauHoi", Storage="_CauHois", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhieuTaoDe", Storage="_PhieuTaoDes", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<PhieuTaoDe> PhieuTaoDes
		{
			get
			{
				return this._PhieuTaoDes;
			}
			set
			{
				this._PhieuTaoDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GiaoVien", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_PhieuTaoDes(PhieuTaoDe entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_PhieuTaoDes(PhieuTaoDe entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mssv;
		
		private string _HoTen;
		
		private string _CMND_CCCD;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _Sdt;
		
		private string _Email;
		
		private string _MatKhau;
		
		private string _MaLop;
		
		private EntitySet<KetQuaBaiThi> _KetQuaBaiThis;
		
		private EntityRef<Lop> _Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMssvChanging(string value);
    partial void OnMssvChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnCMND_CCCDChanging(string value);
    partial void OnCMND_CCCDChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSdtChanging(string value);
    partial void OnSdtChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    #endregion
		
		public HocSinh()
		{
			this._KetQuaBaiThis = new EntitySet<KetQuaBaiThi>(new Action<KetQuaBaiThi>(this.attach_KetQuaBaiThis), new Action<KetQuaBaiThi>(this.detach_KetQuaBaiThis));
			this._Lop = default(EntityRef<Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mssv", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mssv
		{
			get
			{
				return this._Mssv;
			}
			set
			{
				if ((this._Mssv != value))
				{
					this.OnMssvChanging(value);
					this.SendPropertyChanging();
					this._Mssv = value;
					this.SendPropertyChanged("Mssv");
					this.OnMssvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND_CCCD", DbType="NChar(20)")]
		public string CMND_CCCD
		{
			get
			{
				return this._CMND_CCCD;
			}
			set
			{
				if ((this._CMND_CCCD != value))
				{
					this.OnCMND_CCCDChanging(value);
					this.SendPropertyChanging();
					this._CMND_CCCD = value;
					this.SendPropertyChanged("CMND_CCCD");
					this.OnCMND_CCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(150)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sdt", DbType="NChar(10)")]
		public string Sdt
		{
			get
			{
				return this._Sdt;
			}
			set
			{
				if ((this._Sdt != value))
				{
					this.OnSdtChanging(value);
					this.SendPropertyChanging();
					this._Sdt = value;
					this.SendPropertyChanged("Sdt");
					this.OnSdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NChar(10)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_KetQuaBaiThi", Storage="_KetQuaBaiThis", ThisKey="Mssv", OtherKey="MaHS")]
		public EntitySet<KetQuaBaiThi> KetQuaBaiThis
		{
			get
			{
				return this._KetQuaBaiThis;
			}
			set
			{
				this._KetQuaBaiThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_HocSinh", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KetQuaBaiThis(KetQuaBaiThi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_KetQuaBaiThis(KetQuaBaiThi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KetQuaBaiThi")]
	public partial class KetQuaBaiThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKQ;
		
		private System.Nullable<double> _Diem;
		
		private string _MaHS;
		
		private string _MaDe;
		
		private EntitySet<ChiTietBaiThi> _ChiTietBaiThis;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKQChanging(string value);
    partial void OnMaKQChanged();
    partial void OnDiemChanging(System.Nullable<double> value);
    partial void OnDiemChanged();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    #endregion
		
		public KetQuaBaiThi()
		{
			this._ChiTietBaiThis = new EntitySet<ChiTietBaiThi>(new Action<ChiTietBaiThi>(this.attach_ChiTietBaiThis), new Action<ChiTietBaiThi>(this.detach_ChiTietBaiThis));
			this._DeThi = default(EntityRef<DeThi>);
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKQ", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKQ
		{
			get
			{
				return this._MaKQ;
			}
			set
			{
				if ((this._MaKQ != value))
				{
					this.OnMaKQChanging(value);
					this.SendPropertyChanging();
					this._MaKQ = value;
					this.SendPropertyChanged("MaKQ");
					this.OnMaKQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float")]
		public System.Nullable<double> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="NChar(10)")]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KetQuaBaiThi_ChiTietBaiThi", Storage="_ChiTietBaiThis", ThisKey="MaKQ", OtherKey="MaKQ")]
		public EntitySet<ChiTietBaiThi> ChiTietBaiThis
		{
			get
			{
				return this._ChiTietBaiThis;
			}
			set
			{
				this._ChiTietBaiThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_KetQuaBaiThi", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.KetQuaBaiThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.KetQuaBaiThis.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_KetQuaBaiThi", Storage="_HocSinh", ThisKey="MaHS", OtherKey="Mssv", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.KetQuaBaiThis.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.KetQuaBaiThis.Add(this);
						this._MaHS = value.Mssv;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietBaiThis(ChiTietBaiThi entity)
		{
			this.SendPropertyChanging();
			entity.KetQuaBaiThi = this;
		}
		
		private void detach_ChiTietBaiThis(ChiTietBaiThi entity)
		{
			this.SendPropertyChanging();
			entity.KetQuaBaiThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private EntitySet<HocSinh> _HocSinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    #endregion
		
		public Lop()
		{
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NChar(10)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_HocSinh", Storage="_HocSinhs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMonHoc;
		
		private string _TenMonHoc;
		
		private EntitySet<Chuong> _Chuongs;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<PhieuTaoDe> _PhieuTaoDes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    #endregion
		
		public MonHoc()
		{
			this._Chuongs = new EntitySet<Chuong>(new Action<Chuong>(this.attach_Chuongs), new Action<Chuong>(this.detach_Chuongs));
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._PhieuTaoDes = new EntitySet<PhieuTaoDe>(new Action<PhieuTaoDe>(this.attach_PhieuTaoDes), new Action<PhieuTaoDe>(this.detach_PhieuTaoDes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(100)")]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_Chuong", Storage="_Chuongs", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<Chuong> Chuongs
		{
			get
			{
				return this._Chuongs;
			}
			set
			{
				this._Chuongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoi", Storage="_CauHois", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GiaoVien", Storage="_GiaoViens", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhieuTaoDe", Storage="_PhieuTaoDes", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<PhieuTaoDe> PhieuTaoDes
		{
			get
			{
				return this._PhieuTaoDes;
			}
			set
			{
				this._PhieuTaoDes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chuongs(Chuong entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_Chuongs(Chuong entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_PhieuTaoDes(PhieuTaoDe entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_PhieuTaoDes(PhieuTaoDe entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuTaoDe")]
	public partial class PhieuTaoDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhieuTaoDe;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _SoLuongDe;
		
		private System.Nullable<int> _SoCauHoi;
		
		private System.Nullable<int> _ThoiGianLamBai;
		
		private string _MaMonHoc;
		
		private string _MaGiaoVien;
		
		private string _TrangThai;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuTaoDeChanging(string value);
    partial void OnMaPhieuTaoDeChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnSoLuongDeChanging(System.Nullable<int> value);
    partial void OnSoLuongDeChanged();
    partial void OnSoCauHoiChanging(System.Nullable<int> value);
    partial void OnSoCauHoiChanged();
    partial void OnThoiGianLamBaiChanging(System.Nullable<int> value);
    partial void OnThoiGianLamBaiChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public PhieuTaoDe()
		{
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuTaoDe", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhieuTaoDe
		{
			get
			{
				return this._MaPhieuTaoDe;
			}
			set
			{
				if ((this._MaPhieuTaoDe != value))
				{
					this.OnMaPhieuTaoDeChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuTaoDe = value;
					this.SendPropertyChanged("MaPhieuTaoDe");
					this.OnMaPhieuTaoDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDe", DbType="Int")]
		public System.Nullable<int> SoLuongDe
		{
			get
			{
				return this._SoLuongDe;
			}
			set
			{
				if ((this._SoLuongDe != value))
				{
					this.OnSoLuongDeChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDe = value;
					this.SendPropertyChanged("SoLuongDe");
					this.OnSoLuongDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCauHoi", DbType="Int")]
		public System.Nullable<int> SoCauHoi
		{
			get
			{
				return this._SoCauHoi;
			}
			set
			{
				if ((this._SoCauHoi != value))
				{
					this.OnSoCauHoiChanging(value);
					this.SendPropertyChanging();
					this._SoCauHoi = value;
					this.SendPropertyChanged("SoCauHoi");
					this.OnSoCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianLamBai", DbType="Int")]
		public System.Nullable<int> ThoiGianLamBai
		{
			get
			{
				return this._ThoiGianLamBai;
			}
			set
			{
				if ((this._ThoiGianLamBai != value))
				{
					this.OnThoiGianLamBaiChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianLamBai = value;
					this.SendPropertyChanged("ThoiGianLamBai");
					this.OnThoiGianLamBaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="NChar(10)")]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NChar(10)")]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuTaoDe_DeThi", Storage="_DeThis", ThisKey="MaPhieuTaoDe", OtherKey="MaPhieuTaoDe")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhieuTaoDe", Storage="_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.PhieuTaoDes.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.PhieuTaoDes.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhieuTaoDe", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.PhieuTaoDes.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.PhieuTaoDes.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.PhieuTaoDe = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.PhieuTaoDe = null;
		}
	}
}
#pragma warning restore 1591
